<?xml version="1.0"?>
<ruleset name="Petclinic-Prod"
         xmlns="http://pmd.sf.net/ruleset/1.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://pmd.sf.net/ruleset/1.0.0 http://pmd.sf.net/ruleset_xml_schema.xsd"
         xsi:noNamespaceSchemaLocation="http://pmd.sf.net/ruleset_xml_schema.xsd">
    <description>
        Petclinic PMD rule set for production code (tests are omitted)
    </description>
    <exclude-pattern>.*/src/test[a-zA-Z]*/.*.java</exclude-pattern>

    <!--
        Reference at PMD rules documentation:

        http://pmd.sourceforge.net/pmd-{yourPmdVersion}/pmd-java/rules/index.html
        look for PMD version at properties file (default is 5.4.1)
    -->

    <!--
        ****************************************************************************************************
        Code Size

        Rules that find problems related to code size or complexity.
        ****************************************************************************************************
    -->
    <!--
        Default report level is 45 public entries
    -->
    <rule ref="rulesets/java/codesize.xml/ExcessivePublicCount"/>

    <!--
        Default report level is 15 fields in class
    -->
    <rule ref="rulesets/java/codesize.xml/TooManyFields"/>

    <!--
        Default report level is 10 methods in class (getters & setters ignored)
    -->
    <rule ref="rulesets/java/codesize.xml/TooManyMethods">
        <properties>
            <property name="maxmethods" value="40"/>
        </properties>
    </rule>

    <!--
        ****************************************************************************************************
        Coupling

        Rules which find instances of high or inappropriate coupling between objects and packages.

        Read about enabled checks at:
        http://pmd.sourceforge.net/pmd-5.4.1/pmd-java/rules/java/coupling.html
        ****************************************************************************************************
    -->

    <!--
     A high number of imports can indicate a high degree of coupling within an object.
    -->
    <rule ref="rulesets/java/coupling.xml/ExcessiveImports">
        <properties>
            <property name="minimum" value="35"/>
        </properties>
    </rule>

    <rule ref="rulesets/java/coupling.xml">
        <!-- declared in CheckStyle -->
        <exclude name="CouplingBetweenObjects"/>

        <!-- We have no restricted packages, don't need this check -->
        <exclude name="LoosePackageCoupling"/>

        <!-- LoD conflicts with fluent API style -->
        <exclude name="LawOfDemeter"/>

    </rule>


    <!--
        ****************************************************************************************************
        Custom XPath rules
        ****************************************************************************************************
    -->
    <rule name="NonOverriddenMethodDeclareThrowsException"
          message="Do not use generic exception as possible throwable if you don't override library methods."
          class="net.sourceforge.pmd.lang.rule.XPathRule"
          externalInfoUrl=""
          language="java">
        <description>
            Do not use generic exception as possible throwable if you don't override library methods. Use or implement specific exceptions for such cases.
        </description>
        <priority>1</priority>
        <properties>
            <property name="xpath">
                <value>
                    <![CDATA[
                        /.//NameList[not (../../Annotation/MarkerAnnotation/Name[@Image='Override']) and ./Name[@Image='Exception']]
                    ]]>
                </value>
            </property>
        </properties>
    </rule>

</ruleset>
