import groovy.sql.Sql

String username = "${username}".toString()
String admin = "${admin}".toString()
String password = "${password}".toString()

//  --- Create and drop database tasks
configurations {
    driver
}

dependencies {
    driver group: 'org.postgresql', name: 'postgresql'
}

URLClassLoader loader = GroovyObject.class.classLoader

configurations.driver.each {File file ->
    loader.addURL(file.toURL())
}

task createDatabase() {
    doLast{
        String createUserQuery = "create user ${username}".toString()
        Sql.withInstance('jdbc:postgresql://localhost:5432/', admin,
                password, 'org.postgresql.Driver', { Sql sql ->
            sql.execute(createUserQuery)
        })

        String createUserPasswordQuery = "alter user ${username} password \'${password}\'".toString()
        Sql.withInstance('jdbc:postgresql://localhost:5432/', admin,
                password, 'org.postgresql.Driver', { Sql sql ->
            sql.execute(createUserPasswordQuery)
        })

        String createDbQuery = "create database ${databaseName} owner ${username}".toString()
        Sql.withInstance('jdbc:postgresql://localhost:5432/', admin,
                password, 'org.postgresql.Driver', { Sql sql ->
            sql.execute(createDbQuery.toString())
        })

        String createSchemaQuery = "create schema if not exists ${schemaName} authorization ${username}".toString()
        Sql.withInstance("jdbc:postgresql://localhost:5432/${databaseName}", username,
                password, 'org.postgresql.Driver', { Sql sql ->
            sql.execute(createSchemaQuery.toString())
        })
    }
}

task dropDatabase() {
    doLast{
        String dropDatabaseQuery = "drop database if exists ${databaseName}".toString()
        Sql.withInstance('jdbc:postgresql://localhost:5432/', admin,
                password, 'org.postgresql.Driver', { Sql sql ->
            sql.execute(dropDatabaseQuery)
        })

        String dropUserQuery = "drop user if exists ${username}".toString()
        Sql.withInstance('jdbc:postgresql://localhost:5432/', admin,
                password, 'org.postgresql.Driver', { Sql sql ->
            sql.execute(dropUserQuery)
        })
    }
}
