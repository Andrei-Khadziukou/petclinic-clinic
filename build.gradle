buildscript {
    ext {
        springBootVersion = '1.5.2.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
        mavenLocal()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("com.epam.petclinic:petclinic-plugins:${petclinicPluginsVersion}")
    }
}

apply plugin: 'org.springframework.boot'
apply plugin: 'project-report'
apply plugin: 'petclinic-java'
apply plugin: 'petclinic-code-coverage'
apply plugin: 'petclinic-idea'
apply plugin: 'petclinic-ascii-doctor'
apply plugin: 'petclinic-database'


repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/milestone" }
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-actuator-docs')
    compile('org.springframework.cloud:spring-cloud-starter-eureka')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    compile('org.springframework.cloud:spring-cloud-starter-config')
    compile('org.springframework.boot:spring-boot-starter-validation')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.projectlombok:lombok')
    runtime('org.springframework.boot:spring-boot-devtools')
    runtime('org.postgresql:postgresql')
    runtime('com.h2database:h2')
    testCompile('org.liquibase:liquibase-core')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Dalston.RELEASE'
    }
}

test {
    systemProperty 'spring.profiles.active', 'test'
}

[processResources, processTestResources]*.doFirst {
    expand(project.properties)
}

//TODO: improve code coverage and remove
checkMinimumCoverage.enabled=false
